#!/bin/bash
# bunch of commmands to make cute prompt

# turns the #123b84 color codes to 203;133;54 rgb codes
hex_color_to_rgb() {
    hex=${1#"#"}
    r=$((0x${hex:0:2}))
    g=$((0x${hex:2:2}))
    b=$((0x${hex:4:2}))

  printf "%d;%d;%d\n" "$r" "$g" "$b"
}

col_1="EFB036,694602"
col_2="#A93F55,cccccc"
col_3="23486A,cccccc"
col_4="#A4D4B4,00000"

rgb_ps1() {
    main=${1%,*}
    accent=${1#*,}

    # u=uniform, main is bg, accent is fg no arrow
    if [ "$2" == "u" ]; then
        printf "\[\033[0m\]\[\033[38;2;$(hex_color_to_rgb "$accent");48;2;$(hex_color_to_rgb "$main")m\]"
    # a=arrow, start with indended arrow, main is bg, accent is fg
    elif [ "$2" == "a" ]; then
        printf "\[\033[0m\]\[\033[38;2;$(hex_color_to_rgb "00000");48;2;$(hex_color_to_rgb "$main")m\]\[\033[38;2;$(hex_color_to_rgb "$accent");48;2;$(hex_color_to_rgb "$main")m\]"
    # ab=arrow + bold
    elif [ "$2" == "ab" ]; then
        printf "\[\033[0m\]\[\033[38;2;$(hex_color_to_rgb "00000");48;2;$(hex_color_to_rgb "$main")m\]\[\033[38;2;$(hex_color_to_rgb "$accent");48;2;$(hex_color_to_rgb "$main");1m\]"
    # f=forground, main is forground, bg is not set
    elif [ "$2" = "f" ]; then
        printf "\[\033[0m\]\[\033[38;2;$(hex_color_to_rgb "$main")m\]"
    # s=stop, reset the colors
    elif [ "$1" == "s" ]; then
        printf "\[\033[0m\]"
    fi
}

prompt_cmd() {
    _PS1_now=$(date +%s)
    GIT_BRANCH="$(git branch --show-current 2>/dev/null)"
    CONDA_ENV="$(echo $CONDA_DEFAULT_ENV | awk -F '/' '{print $NF}')"

    SHORT_PWD="$(echo ${PWD%\/*} | sed -r 's|/(..)[^/]*|/\1|g')"
    CURRENT_DIR="$(echo ${PWD##*\/})"

    # if in a screen, no color for you
    if [ -n "$STY" ]; then
        LINE_1="╭── ::$CONDA_ENV:: | $ENV | $PWD"
        LINE_2="╰─ >>> "
        if [ -n "$GIT_BRANCH" ]; then
            LINE_1="$LINE_1 |  $GIT_BRANCH"
        fi
        PS1="\r\n${LINE_1}\r\n${LINE_2}"
    else  # else, plently of colors!
        LINE_1="$(rgb_ps1 $col_1 'f')╭──$(rgb_ps1 $col_1 'u') ::$CONDA_ENV:: $(rgb_ps1 $col_1 'f')$(rgb_ps1 $col_2 'ab') $ENV $(rgb_ps1 $col_2 'f')$(rgb_ps1 $col_3 'a') $SHORT_PWD/$CURRENT_DIR $(rgb_ps1 $col_3 'f')"
        LINE_2="$(rgb_ps1 $col_1 'f')╰─ >>> $(rgb_ps1 's')"

        # get the length of LINE_1: sum length of various variable + fixed characters like arrows etc
        length_line_1=$(( 20 + ${#CONDA_ENV} +  ${#ENV} + ${#SHORT_PWD} + ${#CURRENT_DIR} ))

        if [ -n "$GIT_BRANCH" ]; then
            LINE_1="$LINE_1$(rgb_ps1 $col_4 'a')  $GIT_BRANCH $(rgb_ps1 's')"
            length_line_1=$(( $length_line_1 + 5 + ${#GIT_BRANCH} ))
        fi
        time=$(( _PS1_now - _PS1_lastcmd ))

        # add runtime at the end of prompt line
        #LINE_1="${LINE_1}$(rgb_ps1 's')$(printf '%*s' $(( $(tput cols) - $length_line_1 - ${#time} )) "")$(rgb_ps1 $col_1 'u')$time$(rgb_ps1 's')"

        # update time stamp
        _PS1_lastcmd=$_PS1_now

        PS1="\r\n${LINE_1}\r\n${LINE_2}"
    fi
}

export PROMPT_COMMAND='prompt_cmd'
_PS1_lastcmd=$(date +%s)
